/*! @ryanmorr/stache v0.1.1 | https://github.com/ryanmorr/stache */
"use strict";const e=/(\r\n|\r|\n)/g,s=/{{\s*(.+?)\s*}}/g,n=/^each\s+(.*)\s+as\s+(.*)$/,u=/^if\s+(.*)$/,t=/^else if\s+(.*)$/;module.exports=function(r){let i;return c=>(i||(i=new Function("_data",`\n                let _strings = [], _sequence = [], _values = [];\n                let ${Object.keys(c).map((e=>`${e} = _data['${e}']`)).join(",")};\n                _sequence.push('${r.trim().replace(e,"\\n").replace(s,((e,s)=>{if(s.startsWith("each")){let e=n.exec(s);if(e)return`'); (${e[1]}).forEach((${e[2]}) => { _sequence.push('`}else if(s.startsWith("if")){let e=u.exec(s);if(e)return`'); if (${e[1]}) { _sequence.push('`}else if(s.startsWith("else if")){let e=t.exec(s);if(e)return`'); } else if (${e[1]}) { _sequence.push('`}else{if("else"===s)return"'); } else { _sequence.push('";if("/each"===s)return"'); }); _sequence.push('";if("/if"===s)return"'); } _sequence.push('"}return`'); _strings.push(_sequence.join('')); _sequence = []; _values.push(${s}); _sequence.push('`}))}');\n                _strings.push(_sequence.join(''));\n                return [_strings, _values];\n            `)),i(c))};
